[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "crawler-system"
version = "1.0.0"
description = "企业级分布式疫情信息爬虫系统"
authors = [
    {name = "Crawler Team", email = "team@crawler.com"}
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "beautifulsoup4>=4.13.4",
    "flask>=3.1.1",
    "jieba>=0.42.1",
    "jsonpath-ng>=1.7.0",
    "lxml>=6.0.0",
    "pillow>=11.3.0",
    "pre-commit>=4.2.0",
    "psutil>=7.0.0",
    "psycopg2-binary>=2.9.10",
    "pymongo>=4.13.2",
    "python-dateutil>=2.9.0.post0",
    "pyyaml>=6.0.2",
    "redis>=6.2.0",
    "requests>=2.32.4",
    "scrapy>=2.13.3",
    "scrapy-redis>=0.9.1",
    "selenium>=4.34.2",
    "watchdog>=6.0.0",
    "webdriver-manager>=4.0.2",
]

# 包发现配置
[tool.setuptools.packages.find]
include = ["crawler*", "proxy_pool*", "scheduler*", "anti_crawl*", "data_processing*", "monitoring*"]
exclude = ["tests*", "deployment*", "config*", "logs*", "data*", "temp*", "crawler01*"]

[project.urls]
Homepage = "https://github.com/your-org/crawler-system"
Documentation = "https://crawler-system.readthedocs.io/"
Repository = "https://github.com/your-org/crawler-system.git"
Issues = "https://github.com/your-org/crawler-system/issues"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
    ".mypy_cache"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["crawler"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
